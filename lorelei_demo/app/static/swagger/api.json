{
    "swagger": "2.0",
    "tags": [
        {
            "name": "run",
            "description": "for runtime"
        },
        {
            "name": "train",
            "description": "for training"
        }
    ],
    "info": {
        "title": "ELISA Information Extraction",
        "description": "APIs for extracting information from text documents in low-resource languages.",
        "version": "1.0.0"
    },
    "schemes": [
        "http"
    ],
    "basePath": "/elisa_ie",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/entity_discovery_and_linking/{identifier}": {
            "post": {
                "tags": [
                    "run"
                ],
                "summary": "main entry of the ELISA EDL system",
                "description": "Main entry of the ELISA EDL system. Take input in either plain text of *.ltf format, tag names that are PERSON, ORGANIZATION or LOCATION, and links them to Wikipedia.",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "language code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "text",
                        "in": "body",
                        "description": "plain text",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "input_format",
                        "in": "query",
                        "required": true,
                        "type": "array",
                        "items":{
                            "type":"string",
                            "enum":["plain text", "NIF"],
                            "default":"plain text"
                        },
                        "description":"(1) tokenized or untokenized plain text, (2) ELISA xml, (3) NIF (Natural Language Interchange Format)"
                    },
                    {
                        "name": "output_format",
                        "in": "query",
                        "required": true,
                        "type": "array",
                        "items":{
                            "type":"string",
                            "enum":["KnowledgeGraph", "EvalTab", "NIF"],
                            "default":"KnowledgeGraph"
                        },
                        "description":"(1) KnowledgeGraph: a pre-defined JSON knowledge graph, (2) EvalTab: NIST LORELEI evaluation format, (3) NIF (Natural Language Interchange Format)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(1) A JSON string of knowledge graph or (2) A string in EvalTab format.",
                        "schema": {
                            "$ref": "#/definitions/KnowledgeGraph"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "summary": "get server status",
                "description": "Retrieve the current server status, including supported languages, language identifiers, and the state (offline, online, or pending) of each model.",
                "tags": [
                    "run",
                    "train"
                ],
                "responses": {
                    "200": {
                        "description": "A JSON string presents a list of supported language identifiers and model status.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Status"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/status/{identifier}": {
            "get": {
                "tags": [
                    "run",
                    "train"
                ],
                "summary": "get server status for a language",
                "description": "Retrieve the current status of the given language.",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "type": "string",
                        "required": true,
                        "description": "language code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A JSON string contains the model status of the given language identifier.",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/train/{identifier}": {
            "post": {
                "tags": [
                    "train"
                ],
                "consumes": ["multipart/form-data"],
                "summary": "train a model",
                "description": "Train a new name tagging model for a language.",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "language code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "creator",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "description": "name of the user"
                    },
                    {
                        "name": "training_set",
                        "in": "formData",
                        "description": "data in CoNLL \"BIO\" format",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "dev_set",
                        "in": "formData",
                        "description": "data in CoNLL \"BIO\" format",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "test_set",
                        "in": "formData",
                        "description": "data in CoNLL \"BIO\" format",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A model id is automatically generated based on model name, and time stamp."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/name_transliteration/{identifier}": {
            "get": {
                "tags": ["run"],
                "summary": "name transliteration",
                "description": "Transliterate a name to Latin script.",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "language code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name to transliterate",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A JSON string of the name transliteration result."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/entity_linking/{identifier}": {
            "get": {
                "tags": ["run"],
                "summary": "query based entity linking",
                "description": "Query based entity linking. Link the name to Wikipedia.",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "language code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "a name to link",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "entity type (PER, ORG or GPE) of the name to improve linking accuracy",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The Wikipedia title (KB id) of the queried name. If it’s not in KB, return NIL."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/entity_linking_amr": {
            "post": {
                "tags": [
                    "run"
                ],
                "consumes":["application/json","application/xml"],
                "summary": "run the entity linking API using AMR input",
                "description": "English entity linking for AMR style input. Abstract Meaning Representation (AMR) is a structured semantic representation scheme. The rich semantic knowledge in AMR boosts linking performance.",
                "parameters": [
                    {
                        "name": "amr_str",
                        "in": "body",
                        "description": "AMR string parsed from a document.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A string in EvalTab format (NIST LORELEI evaluation format)."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/localize/{identifier}": {
            "get": {
                "tags": ["run"],
                "summary": "name localization",
                "description": "Localize a LOC name based on GeoName database.",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "description": "language code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "name to localize",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A JSON string includes the longitude and latitude of the location."
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },

    "definitions": {
        "KnowledgeGraph": {
            "type": "object",
            "properties": {
                "attribute": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Attribute"
                    }
                },
                "entity_mention": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EntityMention"
                    }
                },
                "entity": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Entity"
                    }
                },
                "event_mention": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventMention"
                    }
                },
                "event": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Event"
                    }
                },
                "relation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Relation"
                    }
                }
            }
        },
        "Attribute": {
            "required": [
                "attribute_id",
                "attribute_type",
                "docid:offset",
                "attribute_head",
                "attribute_value"
            ],
            "type": "object",
            "properties": {
                "attribute_id": {
                    "type": "string"
                },
                "attribute_type": {
                    "type": "string"
                },
                "docid:offset": {
                    "type": "string"
                },
                "attribute_head": {
                    "type": "string"
                },
                "attribute_value": {
                    "type": "string"
                }
            }
        },
        "EntityMention": {
            "required": [
                "mention_id",
                "docid:offsets",
                "sentenceid:tokenindexes",
                "mention_head",
                "mention_type",
                "translations",
                "transliterations"
            ],
            "type": "object",
            "properties": {
                "mention_id": {
                    "type": "string"
                },
                "docid:offsets": {
                    "type": "string"
                },
                "sentenceid:tokenindexes": {
                    "type": "string"
                },
                "mention_head": {
                    "type": "string"
                },
                "mention_type": {
                    "type": "string"
                },
                "translations": {
                    "type": "array",
                    "description": "a list of English translations of the entity mention",
                    "items": {
                        "type": "array",
                        "description": "array of size 2, first element is the translation and the second is confidence score",
                        "items": {
                            "type": ["string", "number"]
                        }
                    }
                },
                "transliterations": {
                    "description": "a list of English transliterations of the entity mention",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "description": "array of size 2, first element is the transliteration and the second is confidence score",
                        "items": {
                            "type": ["string", "number"]
                        }
                    }
                }
            }
        },
        "Entity": {
            "required": [
                "entity_id",
                "entity_type"
            ],
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "a path of subtypes"
                },
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Attribute"
                    }
                }
            }
        },
        "EventMention": {
            "required": [
                "mention_id",
                "event_offsets",
                "event_extent",
                "trigger_offsets",
                "trigger"
            ],
            "type": "object",
            "properties": {
                "mention_id": {
                    "type": "string"
                },
                "event_offsets": {
                    "type": "string"
                },
                "event_extent": {
                    "type": "string"
                },
                "trigger_offsets": {
                    "type": "string"
                },
                "trigger": {
                    "type": "string"
                },
                "arguments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Attribute"
                    }
                }
            }
        },
        "Event": {
            "required": [
                "event_id",
                "event_type"
            ],
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string"
                },
                "event_type": {
                    "type": "string"
                },
                "arguments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Attribute"
                    }
                }
            }
        },
        "Relation": {
            "required": [
                "relation_id",
                "relation_type"
            ],
            "type": "object",
            "properties": {
                "relation_id": {
                    "type": "string"
                },
                "relation_type": {
                    "type": "string"
                },
                "arguments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Attribute"
                    }
                }
            }
        },

        "Status": {
            "type": "object",
            "required": [
                "identifier",
                "language",
                "status"
            ],
            "properties": {
                "identifier": {
                    "type": "string",
                    "description": "three letter language code, e.g. eng, chn, hau and etc."
                },
                "language": {
                    "type": "string",
                    "description": "language of input text document"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "online",
                        "offline",
                        "pending"
                    ],
                    "description": "1) online: the IE model of the language is ready to use. 2) pending: the IE model of the language is being created, and will be available eventually, either without human intervention, or after some human-in-the-loop interaction. 3) offline: the language is unavailable, and may require human intervention to bring it back online."
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "EDLInput": {
            "type": "object",
            "properties": {
                "input": {
                    "type": "string"
                }
            }
        }
    }
}